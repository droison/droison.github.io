<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Puck Chai]]></title>
  <link href="http://www.chaisong.xyz/atom.xml" rel="self"/>
  <link href="http://www.chaisong.xyz/"/>
  <updated>2019-11-17T16:15:47+08:00</updated>
  <id>http://www.chaisong.xyz/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[【项目管理】二、貌似是“银弹”的敏捷开发，为什么“只闻其名不见其人”？]]></title>
    <link href="http://www.chaisong.xyz/15739770698651.html"/>
    <updated>2019-11-17T15:51:09+08:00</updated>
    <id>http://www.chaisong.xyz/15739770698651.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>从第一堂软件工程课，如同比较C/S架构和B/S架构一样，老师也一定要比较一下瀑布开发和敏捷开发。<br/>
随着移动互联网统治世界，C/S、B/S之争已经销声匿迹，然而，每当研发团队组建、亦或是开发过程遇到流程困境，敏捷就会每每提及，敏捷开发已经成为大多软件开发从业者心中的“银弹”。<br/>
但是，又好像没有几个人能真的说出自己经历过敏捷开发。</p>
</blockquote>

<h2 id="toc_0">1、什么是敏捷开发？</h2>

<h3 id="toc_1">敏捷宣言</h3>

<p>先看一下敏捷宣言（<a href="http://agilemanifesto.org/principles.html">http://agilemanifesto.org/principles.html</a>），如同希波拉低誓言一样，敏捷开发也有自己的准则：</p>

<ul>
<li>个体和互动 高于 流程和工具</li>
<li>工作的软件 高于 详尽的文档</li>
<li>客户合作 高于 合同谈判</li>
<li>响应变化 高于 遵循计划<br/>
这些原则对于在字节跳动的优秀的工程师来说几乎是常识，其实就是一种以赋能和信任个人为中心的文化。</li>
</ul>

<h3 id="toc_2">产生原因</h3>

<p><img src="media/15739770698651/15739772814595.jpg" alt="" style="width:400px;"/></p>

<p>敏捷开发基于一个这样的假设：<br/>
<code>客户不能够在需求阶段就给出完整、准确的需求，很多需求都是在开发中“涌现”出来，无法在项目初期就明确定义它。</code></p>

<span id="more"></span><!-- more -->

<h3 id="toc_3">服务场景</h3>

<p>敏捷开发的最初产生其实就是用于所谓“定制软件开发”（Custom Software Development）搞出来的概念，说白话，就是处理软件外包工作。在这种情况下，客户其实是组织的外部人员，因为他们会为开发来付费，所以他们占完全的主导地位，可以在任何情况下改变主意。</p>

<h3 id="toc_4">一般实践</h3>

<p>落地到实践，敏捷的流程几乎和Scrum流程紧密结合在一起，特征是在于通过不断的story完成项目的滚动推进。改变传统的以流程为核心变为以人为核心。</p>

<ul>
<li>迭代式开发。</li>
<li>增量交付。</li>
<li>开发团队和客户反馈推动产品开发。</li>
<li>持续集成。</li>
<li>开发团队自我管理。</li>
</ul>

<h2 id="toc_5">2、为什么我们好像没见过敏捷开发？</h2>

<p>正如上面描述的“敏捷宣言”，敏捷的思想，或者说“精神”其实在实际的开发中是无处不在的，但如果落地到应用层面，就显得尤其的水土不服。</p>

<h3 id="toc_6">从起源来讲：</h3>

<p>敏捷开发产生是源于企业软件交付的诸多难题，比如变更、缓慢、高成本等。这类交付大多以项目形式组织、以产品为结果。 </p>

<p>项目有两个核心特征“为客户服务”、“一次性”：</p>

<ol>
<li><p>项目的发起是从客户需求出发的，这隐含了客户必定是存在的，而且是明确的，通常客户是一个人或一个公司的需求提出人。通常是一对一服务的。他们的需求一般也是明确的，至少方向是明确的。 <br/>
<strong>问题：</strong><br/>
这并适用于我们互联网公司的产品研发。<br/>
我们的产品通常是自主研发的，它是有企业对市场的分析，洞察出一个普遍性需求，进而研发出产品，然后寻找购买者进行销售。通常是一对多服务的。因为面对大量用户，他们会存在各种各样的个性化需求，因此便不能想做项目一样有明确的需求，这就需要主创者对产品方向进行判断和把控。 <br/>
所以敏捷开发中“客户合作”、“客户现场”等都是对客户重要性的确认，一旦客户不存在，例如自主产品研发早期还没有用户的时候，需求的挖掘、产品的验收就都成了问题。 </p></li>
<li><p>项目一般是为一个确定目标所完成的一次性活动，所以项目是以客户验收为结束标志的。<br/>
<strong>问题：</strong><br/>
互联网产品因存在大量用户，是持续交付的，再加上产品的更新换代，还要对老用户升级。 <br/>
敏捷开发中强调“客户验收”的重要性，要求与客户频繁验收，从而尽早发现问题，尽早调整，减少返工浪费，同时收敛项目范围。但互联网产品的功能是越做越多的，不断发散，同时还无法快速与用户验收，甚至无法验收，因为用户太多，不知道以谁为准，或者用户拒绝对未成形产品验收。这都让敏捷开发更多的局限在项目交付范畴之内。 </p></li>
</ol>

<h3 id="toc_7">从过程来看：</h3>

<p>用<a href="https://www.quora.com/Why-do-some-developers-at-strong-companies-like-Google-consider-Agile-development-to-be-nonsense">Google工程师David Jeske的回答</a>：从敏捷开发的理念和精神上看，和我们的看法是比较接近的，它鼓励激发个体能力，强调合作与沟通，强调始终拥抱变化，但如果把其落地到具体的开发工作却并不能带来奇效。</p>

<p>敏捷开发过程其实更适用于特定类型的开发，最显著的是面向咨询或合同的软件编程（也就是软件外包），在这种情况下，客户是组织的外部人员，因为他们为开发付费，所以客户占主导地位操纵局势，可以在任何时候改变主意。但是，短期的规划、直接与客户接触和持续迭代的风格，非常适合具有简单核心和大量客户可见特性的软件，这些软件的可用性可以增量的方式上升。</p>

<p>如果在互联网产品中严格执行敏捷的Sprint的周期工作，每个Sprint并不一定都可以有可demo的进度，产品设计者也不会根据sprint的反馈澄清不清晰的需求，每个team的燃尽图都可以做的很漂亮，但release却还是会又delay。</p>

<p>所以：</p>

<ul>
<li>一方面，我们需要在产品最开始就把握好最终的形态，而不是傻呵呵的看每个demo结果再想新需求（eg：如果做图集发布器，产品在你们把上拉动画完成后，体验下说后面我们这样“巴拉巴拉”，你会不会骂人）</li>
<li>另一方面，也不能要求各自为政的Scrum team可以自我完整运行好，需要有更高层的机制来协调各自的进度关系，而且，一个又一个的sprint并不能做好产品，产品必须现有一个长远的计划。</li>
</ul>

<h3 id="toc_8">总结和启示：</h3>

<p>在互联网公司，产研团队是一个紧密的整体，一个需求开发时间短则3、5天，长则1、2个月，需求内聚而不可分，只有在开发周期的尾声，整个项目相对完整时才具有可用性。或者可以认为，每个需求只是一个敏捷过程，我们始终无法看到全貌，我们可以用敏捷原则来指导我们思考，却没法依赖敏捷流程来做项目。<br/>
由此，我们引出了第三部分，我们的项目管理经验：团队的敏捷管理（Scrum Master）和项目的Owner负责制。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【项目管理】一、从概念说起，好的项目管理对团队有什么意义]]></title>
    <link href="http://www.chaisong.xyz/15653502237717.html"/>
    <updated>2019-08-09T19:30:23+08:00</updated>
    <id>http://www.chaisong.xyz/15653502237717.html</id>
    <content type="html"><![CDATA[
<p>项目管理最初起源于西方发达国家的国防工程建设和工民建工程建设方面，应用于例如导弹研制、登月等工程，起到了很好的效果。</p>

<p>现代项目管理一般认为开始于上个实际80年代，主要应对全球化下的大量项目工程。以此也延伸了很多学科例如项目管理学、项目管理硕士，以及一些专业考试，典型的就是PMP。</p>

<p>项目管理就是经过周密的计划，管理项目中的人、事、物，高效达成目标的过程。也就是使得目标高效率、高质量的完成。<br/>
在互联网公司，一个好的项目制度和管理方式，在维护团队的凝聚力和业务归属感上，都有非常大的好处。<strong>对于工程师团队来讲，项目管理制度是对公司文化的缩影和实践</strong>，是技术团队的思维方式。</p>

<ul>
<li>工程意义
<ul>
<li>如果项目没人管的话，只会越来越乱，绝对不会按期完成 --&gt; 熵的概念，外力如果不施加能量，就不会有序</li>
</ul></li>
<li>文化意义
<ul>
<li>项目基本贯穿整个工程师团队的日程工作，项目管理遵循怎样的原则意味这我们团队的价值观，我们的做事方式，我们的文化。</li>
</ul></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在互联网公司，App开发需要怎么的项目管理？]]></title>
    <link href="http://www.chaisong.xyz/15653372657357.html"/>
    <updated>2019-08-09T15:54:25+08:00</updated>
    <id>http://www.chaisong.xyz/15653372657357.html</id>
    <content type="html"><![CDATA[
<p><img src="media/15653372657357/15653491426516.jpg" alt="" style="width:300px;"/></p>

<blockquote>
<p>写在前面：​<br/>
从业多年，有在Tencent和ByteDance这样的大公司，也有QDaily这样的创业经历，大小项目做过不少，涉及的业务复杂度很高，合作方也很多，在工作中，做过一些项目管理和推进的思考和尝试，这里整理一下，和同样感兴趣的人或者有相关困惑的同学一起做做交流。<br/>
视角主要偏客户端一些，不够普世，期望能给大家带来一些启发。</p>
</blockquote>

<p><em>下面先整理了目录，接下来半个月，会按照这个顺序逐步拆解下这个话题。</em></p>

<hr/>

<h3 id="toc_0">一、从概念说起，好的项目管理对团队有什么意义</h3>

<p>剧透：项目管理概念来源于西方，最初应用于军工、重大政府公共项目....<br/>
…</p>

<h3 id="toc_1">二、貌似是“银弹”的敏捷开发，为什么“只闻其名不见其人”？</h3>

<p>剧透：每个CS专业的同学，可能在入学最开始就被人安利敏捷开发模式，同时鄙视下瀑布模型，但其实大多数人工作很多年都没有见过“猪跑”...<br/>
…</p>

<h3 id="toc_2">三、经验分享：团队的敏捷管理（Scrum Master）和项目的Owner负责制</h3>

<p>剧透：通过大量的项目管理理论知识和具体的工程实践，在ByteDance，我们团队落地了了一套适合自己的协作管理模式...<br/>
…</p>

<h3 id="toc_3">四、在ByteDance，App开发需要怎样的项目管理？</h3>

<p>剧透：这部分，我会拆解整个项目的生命周期，结合具体case来聊聊针对C端互联网产品的迭代，我们到底需要怎样的项目管理...<br/>
…</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[年中思考]]></title>
    <link href="http://www.chaisong.xyz/15611669279804.html"/>
    <updated>2019-06-22T09:28:47+08:00</updated>
    <id>http://www.chaisong.xyz/15611669279804.html</id>
    <content type="html"><![CDATA[
<hr/>

<p>产品经理真是个没有门槛的行业。<br/>
产品经理真是个很有门槛的行业。<br/>
活生生看到一个技术大佬变成了产品负责人，有种学而优则仕的啼笑皆非。<br/>
-- 写在听文佳动员会之后</p>

<hr/>

<p>最近面试了几个产品经理，有的思维很严谨，有的很有洞察力，感叹研发在其中的弱势，发展还是窄了一些。</p>

<hr/>

<p>工作也有一些感悟：<br/>
开始从解决问题 到 解决事情转变。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从数据看北京教育资源]]></title>
    <link href="http://www.chaisong.xyz/15615190654300.html"/>
    <updated>2019-06-26T11:17:45+08:00</updated>
    <id>http://www.chaisong.xyz/15615190654300.html</id>
    <content type="html"><![CDATA[
<p>最近高考，想到自己也到了而立之年，原本很远的事情慢慢好像也不是那么遥不可及了，遂分析下当前的教育资源。老婆是北京户口，现在各地户口整体比较放松，非北京地区我可以选的余地还比较大，综合生活可行性来看，内蒙、天津、沈阳是候选集，下面比较下这三地和北京的教育资源分析：</p>

<p>内蒙2007年高考人数23.9w，我当时理科排名第700，就算内蒙人才密度低，和北京的密度水平差10倍，那我在北京高考应该也能达到前2.93%；辽宁省其实比内蒙不会强太多，算内蒙密度的2倍，天津算内蒙密度的3倍，那就是0.586%和0.879%。<br/>
下面按比例比较下四地的高考情况：</p>

<h2 id="toc_0">1. 内蒙古</h2>

<p>内蒙古2018年16.3万人高考，按比例那就是477名：就是650分到658之间<br/>
<img src="media/15615190654300/15615305942436.jpg" alt="" style="width:445px;"/></p>

<h2 id="toc_1">2. 辽宁</h2>

<p>在辽宁，按照2018年18.5w高考情况，2～3倍人才密度1083～1625名，654～661分。<br/>
<img src="media/15615190654300/15615223117754.jpg" alt=""/></p>

<p>那在辽宁能上什么学校呢？</p>

<p><img src="media/15615190654300/15615229535050.jpg" alt=""/></p>

<h2 id="toc_2">3. 天津市</h2>

<p>天津按照内蒙3倍到4倍的人才密度吧，0.8784%到1.1712%，483-644，能达到668分。<br/>
<a href="media/15615190654300/%E5%A4%A9%E6%B4%A52018%E7%90%86%E7%A7%91.numbers">天津2018理科</a></p>

<p><img src="media/15615190654300/15615364660910.jpg" alt="" style="width:641px;"/></p>

<h2 id="toc_3">4. 北京</h2>

<p>“北京考大学很容易”，似乎是13亿人的基本常识，而这也是促使全国精英前赴后继涌入北京，为了一纸北京户口打破头的重要原因</p>

<p>既然北京高考如此容易，为何北京家长要疯抢二十万一平的老破小学区房，为何海淀西城家长要为孩子每年投入一二十万的课外辅导费？他们是矫情还是有说不出的苦衷？</p>

<p>本文将通过大量数据来揭晓北京基础教育围城的真相</p>

<p>首先，“北京考大学很容易”，这个论点有足够多的支撑理由，我们先来看一看，2016年每一个18岁北京户籍娃相比较全国平均水平的升学率优势情况：</p>

<p>北京18岁户籍娃比全国18岁娃的升学优势<br/>
北大+清华 17倍<br/>
985 2.7倍<br/>
211 2.3倍<br/>
一本 3倍</p>

<p>清华北大每年毕业差不多2万本硕博，去除掉本校直升的，再算上50%的留京率，每年北京留下六七千清华北大本硕博差不多吧？”（清北留京率已经下降到50%了）</p>

<p>“北京每年有六七百个清北本科名额，但是每年留京六七千清北毕业生，我们极端点算，哪怕清北世袭罔替，拒绝非清北毕业生的娃上清北，平均是不是也得10个清北留京毕业生的娃才能上一个清北？”</p>

<p>每年全国985大学本硕博毕业30多万人，到北京工作的大约20%，也就是五六万（<a href="http://bbsnew.netbig.com/thread-2685545-1-1.html%EF%BC%89%E3%80%82%E4%BD%86%E5%8C%97%E4%BA%AC%E6%AF%8F%E5%B9%B4%E7%9A%84%E4%B8%80%E6%9C%AC%E5%90%8D%E9%A2%9D%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%87%E5%A4%9A%E4%B8%AA%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E8%AF%B4%EF%BC%8C%E5%93%AA%E6%80%95%E6%8B%92%E7%BB%9D%E9%9D%9E985%E5%AE%B6%E9%95%BF%E7%9A%84%E5%A8%83%E8%80%83%E4%B8%80%E6%9C%AC%EF%BC%8C%E9%82%A3%E5%8C%97%E4%BA%AC%E7%9A%84985%E5%AE%B6%E9%95%BF%E4%BB%AC%EF%BC%8C%E4%B9%9F%E5%BE%974%E4%B8%AA%E9%87%8C%E9%9D%A2%E6%B7%98%E6%B1%B03%E4%B8%AA%EF%BC%8C%E6%89%8D%E8%83%BD%E8%AE%A9%E5%A8%83%E8%BF%9B%E4%B8%80%E6%9C%AC">http://bbsnew.netbig.com/thread-2685545-1-1.html）。但北京每年的一本名额只有一万多个，也就是说，哪怕拒绝非985家长的娃考一本，那北京的985家长们，也得4个里面淘汰3个，才能让娃进一本</a></p>

<p>北京每年诞生15万个北京户口的娃，你有没有信心在这些同级家长里面，资产、收入、学历等综合排名前3万，也就是前20%？</p>

<p>2016年，北京理科第1.1万名能上太原理工。你作为家长，排北京同级前3万都困难的话，你咋有信心让你娃成为top 1.1万？</p>

<p>北京每年新增的985本硕博数量和北京的高中录取人数差不多</p>

<p>根据《2015年中国留学白皮书》，已经回国的180万海归中，41.6%在北京工作，而那些希望归国的海归中，计划在北京工作的是29.17%，也就是说，现在每年回国大概40多万海归，其中30%都计划在北京工作。</p>

<p>现在每年美国top10大学的本硕博回京的我估计就有几百上千个，你也知道，北京的高校，甚至北京的知名中学，没有海外名校博士都很难进的</p>

<p>你对高考的映像是不是还停留在你高考的那会儿，也就是10多年前？那会儿北京的同学不都玩着玩着就考北大了么”</p>

<p>05年高考的娃，是85后出生的。那会儿，北京家长的主流还是学历不高的老北京，只有少量高学历新北京。 80年代大学生很少，而且很难留京。<br/>
1990年的时候，北京第四次人口普查，受过大专及以上教育的人口，占总人口的比例是9.3%”</p>

<p>2015年，北京常住人口中，本科学历的比例是18.1%，硕士的比例是4.5%”<br/>
中老年人口的学历是基本不变的，他们会长时间作为分母。而新增的本科硕士，基本都是育龄年轻人口，其中，生娃主力25-35岁的人口，对应的是05-15年留京的这波。在这10年里，北京本科学历人口乘以2.33倍，增加了近230万，研究生学历人口乘以3.45倍，增加了近70万——他们基本都是育龄年轻人</p>

<p>本科人口 研究生人口<br/>
2005年 168.3万 28.1万<br/>
2015年 393.8万 97万<br/>
变化率 2.33倍 3.45倍</p>

<p>他们的娃有许多是不在北京高考的，但他们的娃会在北京上小学初中，他们会参与竞争北京的基础教育资源”</p>

<p>小明：“也就是说，虽然小学中学竞争压力很大，但高考还是会比较轻松？”</p>

<p>塞冬：“不一定，有能力拿到北京户口的毕业生，其平均水平又高了一截。前些年，北京的户口是相对宽松的，05-10年，平均每年从外地净迁入近12万京户，10-15年收紧了，平均每年也是净迁入近10万京户</p>

<p>户籍人口增量 自然净增 机械净增（外地户口净迁入）<br/>
05-10年 77.1万 18.1万 59万<br/>
10-15年 87.4万 39.5万 47.9万</p>

<p>小明：“那确实不少，每年10-12万？”</p>

<p>每年10-12万外地人获得北京户口，其中大多数都是高学历、高收入、高资产人群，但每年北京的一本名额只有1.5-2万人。也就是说，哪怕一本名额不给北京本地人，只给这些获得京户的新增外地精英，竞争也是非常惨烈的</p>

<p>政策是有很大惯性的，举个例子：1990年北京户籍出生人口14万，是1998年的2倍，但2008年北京有1.97万个一本，2016年有1.64万个，从历史上来看，京户小孩出生人数翻番，但一本指标却变化不大</p>

<p>北京每年留下全国50%的清北本硕博和20%的985本硕博，但北京每年高考的时候，只提供全国10%的清北本科名额和全国2%的985本科名额。北京每年留下的985本硕博，比北京高中招生人数还多。就以你小明为例吧，你作为程序员，在北京的社会地位，和送快递的没啥两样，送快递的一个月也一万多。因此，你留在北京，和送快递的一样，小孩止步于职高才是常态，考上二本就算不错了。你回到老家，你的学历就是人上人，可以一路省会顶级单位、省会好房子、省会好学校，你的小孩仍然大概率考上好大学</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LiveData组件分享]]></title>
    <link href="http://www.chaisong.xyz/15613470463264.html"/>
    <updated>2019-06-24T11:30:46+08:00</updated>
    <id>http://www.chaisong.xyz/15613470463264.html</id>
    <content type="html"><![CDATA[
<p><strong>八卦暖场环节</strong></p>

<h1 id="toc_0">引：从Google AAC 和 MVVM开始说起</h1>

<blockquote>
<p>LiveData推出于Google I/O 2017 的 architecture components ，一般和ViewModel、Room、LifeCycle同时介绍，尤其是LifeCycle和ViewModel。最终核心还是期望这些组件能用有效的支持在Android端实现MVVM。</p>
</blockquote>

<h2 id="toc_1">MVP vs MVVM</h2>

<p>MVP 是MVC模式的变种，它已经存在了数十年了。</p>

<pre><code class="language-text">Android领域广泛应用MVP源于Google在2016年年初推出的Android Architecture Blueprints
</code></pre>

<p>MVP和MVC的核心区别在于数据流传输和组织方式，内在思想是面向接口编程，代价是大量胶水代码。</p>

<p><img src="media/15613470463264/15613472117525.jpg" alt=""/></p>

<p>在2005年，微软的WPF和SL架构师John Gossman在他的博客中公开了MVVM模式。是之前PM（Presenter Model）模式的演化。</p>

<p>不像MVP，ViewModel 不需要View的引用。View绑定到ViewModel中的一个属性。这个属性展示了Model对象的数据以及View的其它状态特性。由于ViewModel 对象被设置为View的DataContent，View和ViewModel之间的绑定易于构建。如果ViewModel 里面的属性值改变了，那些新的值会通过数据绑定传递到View。当用户点击View的一个按钮，ViewModel 里面的一个命令就会执行完成需要的动作。ViewModel而不是View执行了Model数据的修改。<code>View类不知道Model类的存在，ViewModel 和Model也不知道View</code>。实际上，Model完全不知道ViewModel和View存在的事实。</p>

<blockquote>
<p>MVVM：“Keeping UI code simple and free of app logic in order to make it easier to manage”<br/>
一种组件逻辑分离的架构模式，让UI部分逻辑更加内聚。<br/>
注：不是名字中有ViewModel、VM的就是MVVM架构，就像有的名字中带Presenter不一定就是MVP，它很可能只是想写一个MVP架构。</p>
</blockquote>

<p><img src="media/15613470463264/15613473603270.jpg" alt=""/></p>

<p><img src="media/15613470463264/15613473671528.jpg" alt=""/></p>

<p>MVVM的关键在于双向绑定，LiveData就是用于解决这个。</p>

<blockquote>
<p>ViewModel组件本次不表，建议后续研究，本次不做发散。</p>
</blockquote>

<span id="more"></span><!-- more -->

<hr/>

<p><code>官方概念环节</code></p>

<h1 id="toc_2">一、（What）什么是LiveData？</h1>

<p><strong>简单说就是LifeCycle在观察者模式中的结合运用。</strong></p>

<p>LiveData有很多好处（<a href="https://tech.meituan.com/2018/07/26/android-livedatabus.html">美团曾经用它替换EventBus</a>)</p>

<ul>
<li><strong>UI和实时数据保持一致</strong> 因为LiveData采用的是观察者模式，这样一来就可以在数据发生改变时获得通知，更新UI。</li>
<li><strong>避免内存泄漏</strong> 观察者被绑定到组件的生命周期上，当被绑定的组件销毁（destroy）时，观察者会立刻自动清理自身的数据。</li>
<li><p><strong>不会再产生由于Activity处于stop状态而引起的崩溃</strong> 因为根本收不到通知</p></li>
<li><p><strong>不需要再解决生命周期带来的问题</strong> LiveData可以感知被绑定的组件的生命周期，只有在活跃状态才会通知数据变化。</p></li>
<li><p><strong>实时数据刷新</strong> 当组件处于活跃状态或者从不活跃状态到活跃状态时总是能收到最新的数据。</p></li>
<li><p><strong>解决Configuration Change问题</strong> 在屏幕发生旋转或者被回收再次启动，立刻就能收到最新的数据。-&gt;依赖ViewModel</p></li>
</ul>

<blockquote>
<p>鉴于LiveData的特性（结合MVVM使用），如果过去习惯使用RxJava来做响应式编程，那依然继续用，唯一区别就是alloc和dealloc记得注册和反注册。</p>
</blockquote>

<hr/>

<p><strong>有趣的使用环节</strong></p>

<h1 id="toc_3">二、（How）LiveData怎么用？</h1>

<blockquote>
<p>个人习惯，看源码 先使用-&gt;工具类-&gt;最常用扩展类-&gt;核心类</p>
</blockquote>

<h2 id="toc_4">普通用法（ActionDataManager用法）</h2>

<p>如何合理的使用ActionDataManager </p>

<ul>
<li>Tips1: LiveData的Observe具有立即回调的特性，所以不需要单独的配置初始化</li>
<li>Tips2: LiveData的setValue需要主线程操作，否则用postValue，但在切线程的时候getValue值不正确</li>
</ul>

<p>默认LiveData是abstract class，setValue和postValue都是protected修饰，大多数时候我们使用<strong>MutableLiveData</strong>，唯一区别是该类的setValue和postValue是public。</p>

<pre><code class="language-java">LiveData&lt;ActionData&gt; liveData = ActionDataManager.INSTANCE.getActionLiveData(getId());
if (liveData != null) {
    liveData.observe(AbsUgcFeedFragment.this, new Observer&lt;ActionData&gt;() {
        @Override
        public void onChanged(@Nullable ActionData actionData) {
            // do some thing
        }
    });
}
</code></pre>

<p>上述代码中就展示了如何使用LiveData，我们只需要定义观察到数据变化后的操作，并在适当的时机触发数据更新。</p>

<ul>
<li>observe后onChanged会立即回调</li>
<li>LiveData的更新只会在LifecycleOwner的lifeCycle在State为RESUMED回调，其他情况不回调</li>
<li>通知变化会在回到前台（RESUMED）后一起回调</li>
<li>destroyed后会自动移除observer</li>
</ul>

<p>如果不需要生命周期管理，可以使用LiveData#observeForever，但需要手动removeObserver：</p>

<pre><code class="language-java">liveData.observeForever(new Observer&lt;ActionData&gt;() {
    @Override
    public void onChanged(@Nullable ActionData actionData) {
        // do some thing
    }
});
</code></pre>

<h2 id="toc_5">还有一些推荐的高级用法</h2>

<blockquote>
<p>&quot;以下三个用法和代码都比较精妙&quot;</p>
</blockquote>

<p><strong>1、Transformations#map()</strong><br/>
用于是把一个数据类型变换为另外一个数据类型。</p>

<pre><code class="language-kotlin">val userLiveData: LiveData = UserLiveData() // value是User，有name和lastname两属性
val userName: LiveData = Transformations.map(userLiveData) {    
    user -&gt; &quot;${user.name} ${user.lastName}&quot;
} // value是String
</code></pre>

<p>源码实现：<br/>
<img src="media/15613470463264/15613480338221.jpg" alt=""/></p>

<p>这里用到了 LiveData 的另一个子类 MediatorLiveData。接下来看一看这是个什么东西。</p>

<p><strong>MediatorLiveData</strong><br/>
从 <code>Transformations#map()</code> 源码中可以看到，MediatorLiveData 有一个 <code>MediatorLiveData#addSource()</code> 方法，这个方法改变了数据内容。 也就是说，我们可以通过 <code>MediatorLiveData</code> 将多个 LiveData 源数据集合起来，如下图所示： <br/>
<img src="media/15613470463264/15613480748320.jpg" alt=""/></p>

<p>一段Demo</p>

<pre><code class="language-kotlin">class MediatorLiveDataFragment : Fragment() {     
    private val changeObserver = Observer&lt;String&gt; { 
        value -&gt;  value?.let { txt_fragment.text = it }    
    }     

    override fun onAttach(context: Context?) {        
        super.onAttach(context)        
        val mediatorLiveData = MediatorLiveData&lt;String&gt;()        
        mediatorLiveData.addSource(getliveDataA())  { 
            mediatorLiveData.value = &quot;A:$it&quot; 
        }        
        mediatorLiveData.addSource(getliveDataB())   { 
            mediatorLiveData.value = &quot;B:$it&quot; 
        }        
        mediatorLiveData.observe(this, changeObserver)    
    }    
    // .. some other Fragment specific code .. 
}
</code></pre>

<p><strong>特征：</strong></p>

<ul>
<li>任何一个LiveData的更新都会回调该source的Observer（用了observeForever，但生命周期时机和真实的LifeCycleOwner一致）</li>
<li>不可见状态同时修改LiveData源，后add的source后调用<br/>
用途：同时监听网络回来数据的LiveData和数据库数据LiveData</li>
</ul>

<p><strong>Transformations#switchMap()</strong><br/>
把一个数据变化为另外一个 LiveData 。<br/>
<strong>特征：</strong>根据SwitchLiveData（用于控制的LiveData）动态切换LiveData。<br/>
<strong>用途：</strong>登录逻辑（选个开关，换成密码登录、验证码登录等等）</p>

<p>源码实现：<br/>
<img src="media/15613470463264/15613481127829.jpg" alt=""/></p>

<hr/>

<p><strong>枯燥无味的代码环节</strong></p>

<h1 id="toc_6">三、（Why）LiveData怎么实现的？</h1>

<blockquote>
<p>此处需要一些前置概念，Lifecycle、LifecycleOwner、Lifecycling、FullLifecycleObserver、GenericLifecycleObserver、LifecycleObserver<br/>
Lifecycling整个框架设计比较有趣，建议研究下，避免发散，本次不表。</p>
</blockquote>

<h2 id="toc_7">模版方法</h2>

<ul>
<li><code>onActive()</code>：方法在LiveData至少有一个活跃的observer（RESUME）的时候才会调用</li>
<li><code>onInactive()</code>：当LiveData没有一个活跃的观察者的时候这个方法会被调用
上述方法会在任何一个LifecycleOwner的state改变时尝试check一次。<br/>
MediatorLiveData就使用了上述时机。</li>
</ul>

<h2 id="toc_8">重要Public方法</h2>

<ul>
<li><code>setValue()</code>：即时更新，需要在主线程</li>
<li><code>postValue()</code>：下一个main message loop更新。不及时</li>
<li><code>observe()</code>：望文生义，observe会立即收到change回调</li>
<li><code>observeForever()</code> ：望文生义</li>
<li><code>removeObserver()</code> ：望文生义，remove操作不会造成change回调</li>
<li><code>removeObservers()</code> ：望文生义</li>
</ul>

<h2 id="toc_9">类图：</h2>

<p><img src="media/15613470463264/15613481777805.jpg" alt=""/></p>

<h2 id="toc_10">调用时序图：</h2>

<p><img src="media/15613470463264/15613481877141.jpg" alt=""/></p>

<p>下面结合LiveData的两个步骤分析，为什么LiveData具有Google给出的这么多特点。按照使用来说，LiveData主要是分为订阅和通知两个步骤。</p>

<h2 id="toc_11">订阅</h2>

<pre><code class="language-java">@MainThread
public void observe(@NonNull LifecycleOwner owner, @NonNull Observer observer) {
    if (owner.getLifecycle().getCurrentState() == DESTROYED) {
        // ignore
        return;
    }
    LifecycleBoundObserver wrapper = new LifecycleBoundObserver(owner, observer);
    ObserverWrapper existing = mObservers.putIfAbsent(observer, wrapper);
    if (existing != null &amp;&amp; !existing.isAttachedTo(owner)) {
        throw new IllegalArgumentException(&quot;Cannot add the same observer&quot;
            + &quot; with different lifecycles&quot;);
    }
    if (existing != null) {
        return;
    }
    owner.getLifecycle().addObserver(wrapper);
}

class LifecycleBoundObserver extends ObserverWrapper implements GenericLifecycleObserver {
    @NonNull final LifecycleOwner mOwner;
     ...
    @Override
    boolean shouldBeActive() {
        return mOwner.getLifecycle().getCurrentState().isAtLeast(STARTED);
    }
    @Override
    public void onStateChanged(LifecycleOwner source, Lifecycle.Event event) {
        if (mOwner.getLifecycle().getCurrentState() == DESTROYED) {
            removeObserver(mObserver);
            return;
        }
        activeStateChanged(shouldBeActive());
    }
    ...
    @Override
    void detachObserver() {
        mOwner.getLifecycle().removeObserver(this);
    }
}
</code></pre>

<p>订阅动作做了两件事</p>

<ol>
<li>将观察者对象与LifecycleOwner绑定成一个LifecycleBoundObserver，并形成观察者与LifecycleBoundObserver的映射；</li>
<li>LifecycleBoundObserver观察LifecycleOwner的生命周期。<br/>
这就实现了Observer是数据观察者，LifecycleBoundObserver是生命周期观察者，观察LifecycleOwner的生命周期。</li>
</ol>

<h2 id="toc_12">通知</h2>

<p>通知有两种形式，分别是数据变化通知和LifecycleOwner生命周期变化通知。</p>

<h2 id="toc_13">数据变化通知：</h2>

<p>setValue是在主线程执行的数据更新方法，postValue是在异步线程执行的数据更新方法，这两个方法最后都调用到了dispatchingValue(null)。</p>

<pre><code class="language-java">private void dispatchingValue(@Nullable ObserverWrapper initiator) {
    if (mDispatchingValue) {
        mDispatchInvalidated = true;
        return;
    }
    mDispatchingValue = true;
    do {
        mDispatchInvalidated = false;
        if (initiator != null) {
            considerNotify(initiator);
            initiator = null;
        } else {
            for (Iterator&lt;Map.Entry&lt;Observer&lt;T&gt;, ObserverWrapper&gt;&gt; iterator =
                mObservers.iteratorWithAdditions(); iterator.hasNext(); ) {
                considerNotify(iterator.next().getValue());
                if (mDispatchInvalidated) {
                    break;
                }
            }
        }
    } while (mDispatchInvalidated);
    mDispatchingValue = false;
}

private void considerNotify(ObserverWrapper observer) {
    if (!observer.mActive) {
        return;
    }
    if (!observer.shouldBeActive()) {
        observer.activeStateChanged(false);
        return;
    }
    if (observer.mLastVersion &gt;= mVersion) {
        return;
    }
    observer.mLastVersion = mVersion;
    //noinspection unchecked
    observer.mObserver.onChanged((T) mData);
}
</code></pre>

<p>执行流程如下<br/>
<img src="media/15613470463264/15613482356986.jpg" alt=""/></p>

<h2 id="toc_14">LifecycleOwner的生命周期变化通知：</h2>

<pre><code class="language-java">class LifecycleBoundObserver extends ObserverWrapper implements GenericLifecycleObserver {
    @Override
    public void onStateChanged(LifecycleOwner source, Lifecycle.Event event) {
        if (mOwner.getLifecycle().getCurrentState() == DESTROYED) {
            removeObserver(mObserver);
            return;
        }
        activeStateChanged(shouldBeActive());
    }
}

private abstract class ObserverWrapper {
    void activeStateChanged(boolean newActive) {
        if (newActive == mActive) {
            return;
        }
        // immediately set active state, so we&#39;d never dispatch anything to inactive
        // owner
        mActive = newActive;
        boolean wasInactive = LiveData.this.mActiveCount == 0;
        LiveData.this.mActiveCount += mActive ? 1 : -1;
        if (wasInactive &amp;&amp; mActive) {
            onActive();
        }
        if (LiveData.this.mActiveCount == 0 &amp;&amp; !mActive) {
            onInactive();
        }
        if (mActive) {
            dispatchingValue(this);
        }
    }
}
</code></pre>

<p>LifecycleBoundObserver注册了LifecycleOwner的生命周期监听，当实现了LifecycleOwner的组件生命周期发生变化时，Lifecycle回调onStateChanged，大致流程如下。<br/>
<img src="media/15613470463264/15613482737458.jpg" alt=""/></p>

<p>当观察者数量从0到1时调用onActive，从1到0调用onInactive，最后走数据派发。举例，观察者组件从后台切到前台时，mActive状态从false变为true，LiveData执行了dispatchValue，所以观察者对象能收到LiveData最后更新的数据。</p>

<h2 id="toc_15">总结</h2>

<p>LiveData作为数据观察者，不仅能观察数据变化，还能感知组件生命周期，这就决定了为什么能收到最新的数据。在组件不再active之后，不会再收到数据回调。还有组件从inactive到active状态时，又能接受到最新的数据。</p>

<p>关于Google自称解决Configuration Change问题，在屏幕发生旋转或者被回收再次启动，立刻就能收到最新的数据。<br/>
这个说法没错，状态变更是能收到最新数据，但是这要求LiveData 没有被销毁。这就需要我们另外存储保存LiveData ，在LiveData类的注释中，最后一段这样写到：<br/>
<img src="media/15613470463264/15613482851187.jpg" alt=""/></p>

<hr/>

<ul>
<li>推荐其他阅读：LiveData beyond the ViewModel — Reactive patterns using Transformations and MediatorLiveData </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[写在19年新年上班第一天]]></title>
    <link href="http://www.chaisong.xyz/15498584515544.html"/>
    <updated>2019-02-11T12:14:11+08:00</updated>
    <id>http://www.chaisong.xyz/15498584515544.html</id>
    <content type="html"><![CDATA[
<p>过去的18年，自己从一个小伙子变成了一个丈夫，生活中更加充实但少了思考，生命中多了一个人占据了自己的空余时间，能体会到奋斗和冲劲在身体中的流失，安于现状的基因开始萌芽。</p>

<p><img src="media/15498584515544/IMG_BAF23BA17096-1.jpeg" alt="座右铭" style="width:400px;"/></p>

<p><strong>不忘初心</strong>。这话说的容易，落实很难。<br/>
<strong>诚实守信，务实敢为</strong>。这是去年的感悟。</p>

<p>公历新年时候总结了自己的过去一年，因为工作完成了一步突破，给自己打分很高，相应的，也给今年的自己更高的挑战。元旦时候，定下了技术持续突破、提升自我管理、提升沟通能力、建立业余爱好四个Objective，期望能指引自己一年的。</p>

<span id="more"></span><!-- more -->

<p>松林的管理topic学习，我选择了“激励机制建设”部分，期望也是能和个人的目标紧扣。</p>

<p>过了今年，就是而立之年了。期待今年，在继续保持技术敏感度和深度的基础上，走更加综合的路线。</p>

<h3 id="toc_0">一、技术持续突破</h3>

<pre><code class="language-text">上一年突破主要是IGListKit相关产生的，突破要靠转型，今年的技术目标在转型今年靠Android、靠Kotlin。
</code></pre>

<ul>
<li>1. 要成为另一个技术栈的专家，能面试、也能通过面试的程度。</li>
</ul>

<h3 id="toc_1">二、自我管理开始达到榜样作用</h3>

<pre><code class="language-text">上一年大量使用了trello做项目管理，比较多的应用了滴答清单管理了一些备忘，有一些心得；很多不良习惯都做了一些纠正。
三十而立，自我管理需要有更高的要求。
</code></pre>

<ul>
<li>1. 阅读一本儒家著作（现代解释版即可）</li>
<li>2. 通读至少一本相关管理学著作（高效能人士习惯、单核工作法）</li>
<li>3. 早起，坚持计划、日记</li>
<li>4. 继续坚持清单和日程管理：守信、守时，不拖延。</li>
</ul>

<h3 id="toc_2">三、管理能力，沟通能力，心理学知识初窥门径</h3>

<pre><code class="language-text">去年看了一些书，对管理学有了一些惊奇。
</code></pre>

<ul>
<li>1. 在一个管理学topic下有探索，达到分享水平</li>
<li>2. 沟通能力要注意实践和总结</li>
<li>3. 找一本入门的心理学书籍扫扫盲</li>
</ul>

<h3 id="toc_3">四、业余爱好</h3>

<pre><code class="language-text">余生漫长，要有方向。打牌也好，运动也罢，书法，摄影都行
</code></pre>

<ul>
<li>1. 目标只有一个，找打一个坚持而又热爱的爱好 </li>
</ul>

<hr/>

<hr/>

<p><code>最后，附一个和老婆的合影，18年开始，我不仅仅要做一个好儿子，还要记得做一个好丈夫，以后，还要做一个好父亲。</code><br/>
<img src="media/15498584515544/IMG_2203%20%E4%B8%8B%E5%8D%889.16.32.jpg" alt="新年合影" style="width:450px;"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[团队管理的感慨：不要让有共同特征的人走的太近]]></title>
    <link href="http://www.chaisong.xyz/15446191606030.html"/>
    <updated>2018-12-12T20:52:40+08:00</updated>
    <id>http://www.chaisong.xyz/15446191606030.html</id>
    <content type="html"><![CDATA[
<p>避免搞小圈子。</p>

<p>比如空降团队，要注意不要让老人太抱团。对应的，新人要打散。</p>

<p>要注意和各个点位关键的同学建立信任。</p>

<p>注意打散团队。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[头条测试内链]]></title>
    <link href="http://www.chaisong.xyz/15438122075796.html"/>
    <updated>2018-12-03T12:43:27+08:00</updated>
    <id>http://www.chaisong.xyz/15438122075796.html</id>
    <content type="html"><![CDATA[
<p><a href="sslocal://thread_detail?tid=1628695135821832">帖子详情页</a></p>

<p><a href="sslocal://concern?cid=1621904795894830">话题页</a></p>

<p><a href="sslocal://repost_page?cover_url=http://p1.pstatp.com/list/pgc-image/RBzdrWmIzLNHLI&amp;fw_id=6633983643108770317&amp;fw_id_type=4&amp;fw_user_id=3242684112&amp;group_id=6633983643108770317&amp;is_video=0&amp;opt_id=6633983643108770317&amp;opt_id_type=4&amp;repost_operation_type=1&amp;repost_type=211&amp;title=%E6%B5%B7%E5%A4%96%E7%BD%91%EF%BC%9A%E5%8D%8E%E4%B8%BACFO%E5%AD%9F%E6%99%9A%E8%88%9F%E7%A6%BB%E5%BC%80%E6%B3%95%E9%99%A2%20%E8%8E%B7%E5%87%86%E4%BF%9D%E9%87%8A%E5%90%8E%E9%A6%96%E6%AC%A1%E9%9C%B2%E9%9D%A2">转发发布器</a></p>

<p><a href="sslocal://repost_page?cover_url=http%3a%2f%2fp1.pstatp.com%2flist%2fpgc-image%2fRBzdrWmIzLNHLI&amp;fw_id=6633983643108770317&amp;fw_id_type=4&amp;fw_user_id=3242684112&amp;group_id=6633983643108770317&amp;is_video=0&amp;opt_id=6633983643108770317&amp;opt_id_type=4&amp;repost_operation_type=1&amp;repost_type=211&amp;title=%e6%b5%b7%e5%a4%96%e7%bd%91%ef%bc%9a%e5%8d%8e%e4%b8%baCFO%e5%ad%9f%e6%99%9a%e8%88%9f%e7%a6%bb%e5%bc%80%e6%b3%95%e9%99%a2%2b%e8%8e%b7%e5%87%86%e4%bf%9d%e9%87%8a%e5%90%8e%e9%a6%96%e6%ac%a1%e9%9c%b2%e9%9d%a2">转发发布器encode</a></p>

<p><a href="sslocal://send_thread?from_where=31&amp;show_et_status=4&amp;category_id=near&amp;publish_mode=1&amp;stay_after_post=true">附近频道发布器</a></p>

<p><a href="sslocal://send_thread?from_where=31&amp;show_et_status=00000&amp;post_content=#%E5%9C%B0%E9%9C%87#&amp;post_content_rich_span=%7Blinks:%5B%7Blength:4,start:0,id_type:0,id:0,title:TODO,link:WhatTheFuck,text:,type:2%7D%5D%7D&amp;post_images=%5b%7b%22uri%22%3a+%22tos-cn-i-0022%2fe2c7fecb42f84b76b7c1a1a399280ff4%22%2c%22url%22%3a+%22http%3a%2f%2fsf3-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2fe2c7fecb42f84b76b7c1a1a399280ff4%7e200x200_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%5d">发布器</a></p>

<p><a href="sslocal://send_thread?from_where=31&amp;show_et_status=00000&amp;post_content=%23%e5%90%8e%e5%ae%ab%e9%87%8c%e7%9a%84%e9%81%bf%e5%ad%90%e7%9c%9f%e7%9b%b8%23+%e5%93%a6%e7%a0%b4%e5%a9%86%e5%a9%86%e7%a0%b47%e5%90%8d%40%e9%99%88%e4%bd%b3%e7%9a%9e+POS%e6%88%91%e5%8e%bb%e6%b4%97%e6%bc%b1%e5%a9%86%e5%a9%86%e5%93%a6%e4%ba%b2%23%e5%9b%be%e7%89%87%23+%e7%a0%b4%e5%a9%86%e5%a9%86%e7%a0%b4%e5%a9%86%e5%a9%86%40%e8%96%9b%e5%ae%9a%e8%b0%94%e7%9a%84%e7%8c%ab%e8%9c%9c+%e7%9d%a1%e5%92%af%e7%a0%b4%e5%a9%86%e5%a9%86%e5%a9%86%e5%a9%86%e5%b0%b1%e6%98%af%e5%b0%b1&amp;post_content_rich_span=%7b%22links%22%3a%5b%7b%22start%22%3a0%2c%22length%22%3a10%2c%22link%22%3a%22sslocal%3a%2f%2fconcern%3fcategory_name%3dprofile_all%5cu0026cid%3d1612215148149768%5cu0026enter_from%3dclick_profile_all%5cu0026tab_sname%3dthread%22%2c%22type%22%3a2%2c%22text%22%3a%22%22%2c%22id%22%3a1612215148149768%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a18%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fprofile%3fcategory_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%5cu0026from_page%3dat_user_profile%5cu0026uid%3d8439729777%22%2c%22type%22%3a1%2c%22text%22%3a%22%22%2c%22id%22%3a8439729777%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a34%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fconcern%3fcategory_name%3dprofile_all%5cu0026cid%3d6226114247017892353%5cu0026enter_from%3dclick_profile_all%5cu0026tab_sname%3dthread%22%2c%22type%22%3a2%2c%22text%22%3a%22%22%2c%22id%22%3a6226114247017892353%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a45%2c%22length%22%3a7%2c%22link%22%3a%22sslocal%3a%2f%2fprofile%3fcategory_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%5cu0026from_page%3dat_user_profile%5cu0026uid%3d105181786798%22%2c%22type%22%3a1%2c%22text%22%3a%22%22%2c%22id%22%3a105181786798%2c%22id_type%22%3a0%7d%5d%7d&amp;post_images=%5b%7b%22uri%22%3a+%22tos-cn-i-0022%2fe2c7fecb42f84b76b7c1a1a399280ff4%22%2c%22url%22%3a+%22http%3a%2f%2fsf3-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2fe2c7fecb42f84b76b7c1a1a399280ff4%7e200x200_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%5d">发布器encode</a></p>

<hr/>

<p><a href="sslocal://send_thread?from_where=31&amp;show_et_status=00000&amp;post_content=%23%e5%90%8e%e5%ae%ab%e9%87%8c%e7%9a%84%e9%81%bf%e5%ad%90%e7%9c%9f%e7%9b%b8%23+%e5%93%a6%e7%a0%b4%e5%a9%86%e5%a9%86%e7%a0%b47%e5%90%8d%40%e9%99%88%e4%bd%b3%e7%9a%9e+POS%e6%88%91%e5%8e%bb%e6%b4%97%e6%bc%b1%e5%a9%86%e5%a9%86%e5%93%a6%e4%ba%b2%23%e5%9b%be%e7%89%87%23+%e7%a0%b4%e5%a9%86%e5%a9%86%e7%a0%b4%e5%a9%86%e5%a9%86%40%e8%96%9b%e5%ae%9a%e8%b0%94%e7%9a%84%e7%8c%ab%e8%9c%9c+%e7%9d%a1%e5%92%af%e7%a0%b4%e5%a9%86%e5%a9%86%e5%a9%86%e5%a9%86%e5%b0%b1%e6%98%af%e5%b0%b1http%3a%2f%2fwap.cac.gov.cn%2f%e8%b1%86%e6%9e%9c%e7%be%8e%e9%a3%9f&amp;post_content_rich_span=%7b%22links%22%3a%5b%7b%22start%22%3a0%2c%22length%22%3a10%2c%22link%22%3a%22sslocal%3a%2f%2fconcern%3fcategory_name%3dprofile_all%5cu0026cid%3d1612215148149768%5cu0026enter_from%3dclick_profile_all%5cu0026tab_sname%3dthread%22%2c%22type%22%3a2%2c%22text%22%3a%22%22%2c%22id%22%3a1612215148149768%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a18%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fprofile%3fcategory_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%5cu0026from_page%3dat_user_profile%5cu0026uid%3d8439729777%22%2c%22type%22%3a1%2c%22text%22%3a%22%22%2c%22id%22%3a8439729777%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a34%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fconcern%3fcategory_name%3dprofile_all%5cu0026cid%3d6226114247017892353%5cu0026enter_from%3dclick_profile_all%5cu0026tab_sname%3dthread%22%2c%22type%22%3a2%2c%22text%22%3a%22%22%2c%22id%22%3a6226114247017892353%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a45%2c%22length%22%3a7%2c%22link%22%3a%22sslocal%3a%2f%2fprofile%3fcategory_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%5cu0026from_page%3dat_user_profile%5cu0026uid%3d105181786798%22%2c%22type%22%3a1%2c%22text%22%3a%22%22%2c%22id%22%3a105181786798%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a63%2c%22length%22%3a22%2c%22link%22%3a%22sslocal%3a%2f%2fwebview%3fcategory_name%3dprofile_all%5cu0026disable_hash%3d1%5cu0026disable_tt_referer%3d1%5cu0026disable_tt_ua%3d1%5cu0026enter_from%3dclick_profile_all%5cu0026url%3dhttp%253A%252F%252Fwap.cac.gov.cn%252F%22%2c%22type%22%3a3%2c%22text%22%3a%22%e7%bd%91%e9%a1%b5%e9%93%be%e6%8e%a5%22%2c%22id%22%3a0%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a85%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fmicroapp%3fapp_id%3dtt7f6e09d3e044c6ae%5cu0026meta%3d%257B%2522icon%2522%253A%2522https%253A%255C%252F%255C%252Fsf3-ttcdn-tos.pstatp.com%255C%252Fimg%255C%252Fdeveloper%255C%252Fapp%255C%252Ftt7f6e09d3e044c6ae%255C%252Ficonb7eae%7e144x144.jpeg%2522%252C%2522name%2522%253A%2522%25E8%25B1%2586%25E6%259E%259C%25E7%25BE%258E%25E9%25A3%259F%2522%252C%2522orientation%2522%253A0%257D%5cu0026launch_from%3dpublish_weitoutiao%5cu0026start_page%3dpages%252Fhome%252Fhome%5cu0026category_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%22%2c%22type%22%3a6%2c%22text%22%3a%22%e8%b1%86%e6%9e%9c%e7%be%8e%e9%a3%9f%22%2c%22id%22%3a0%2c%22id_type%22%3a0%7d%5d%7d&amp;post_images=%5b%7b%22uri%22%3a+%22tos-cn-i-0022%2fe2c7fecb42f84b76b7c1a1a399280ff4%22%2c%22url%22%3a+%22http%3a%2f%2fsf3-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2fe2c7fecb42f84b76b7c1a1a399280ff4%7e200x200_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%2c+%7b%22uri%22%3a+%22tos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%22%2c%22url%22%3a+%22http%3a%2f%2fsf1-ttcdn-tos.pstatp.com%2fimg%2ftos-cn-i-0022%2f1fbf91d10be14f6993e88184f7d05bf8%7e400x261_c1.jpeg%22%7d%5d">post_image 10图</a></p>

<p><a href="sslocal://send_thread?from_where=31&amp;show_et_status=00000&amp;post_content=%23%e5%90%8e%e5%ae%ab%e9%87%8c%e7%9a%84%e9%81%bf%e5%ad%90%e7%9c%9f%e7%9b%b8%23+%e5%93%a6%e7%a0%b4%e5%a9%86%e5%a9%86%e7%a0%b47%e5%90%8d%40%e9%99%88%e4%bd%b3%e7%9a%9e+POS%e6%88%91%e5%8e%bb%e6%b4%97%e6%bc%b1%e5%a9%86%e5%a9%86%e5%93%a6%e4%ba%b2%23%e5%9b%be%e7%89%87%23+%e7%a0%b4%e5%a9%86%e5%a9%86%e7%a0%b4%e5%a9%86%e5%a9%86%40%e8%96%9b%e5%ae%9a%e8%b0%94%e7%9a%84%e7%8c%ab%e8%9c%9c+%e7%9d%a1%e5%92%af%e7%a0%b4%e5%a9%86%e5%a9%86%e5%a9%86%e5%a9%86%e5%b0%b1%e6%98%af%e5%b0%b1http%3a%2f%2fwap.cac.gov.cn%2f%e8%b1%86%e6%9e%9c%e7%be%8e%e9%a3%9f&amp;post_content_rich_span=%7b%22links%22%3a%5b%7b%22start%22%3a0%2c%22length%22%3a10%2c%22link%22%3a%22sslocal%3a%2f%2fconcern%3fcategory_name%3dprofile_all%5cu0026cid%3d1612215148149768%5cu0026enter_from%3dclick_profile_all%5cu0026tab_sname%3dthread%22%2c%22type%22%3a2%2c%22text%22%3a%22%22%2c%22id%22%3a1612215148149768%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a18%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fprofile%3fcategory_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%5cu0026from_page%3dat_user_profile%5cu0026uid%3d8439729777%22%2c%22type%22%3a1%2c%22text%22%3a%22%22%2c%22id%22%3a8439729777%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a34%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fconcern%3fcategory_name%3dprofile_all%5cu0026cid%3d6226114247017892353%5cu0026enter_from%3dclick_profile_all%5cu0026tab_sname%3dthread%22%2c%22type%22%3a2%2c%22text%22%3a%22%22%2c%22id%22%3a6226114247017892353%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a45%2c%22length%22%3a7%2c%22link%22%3a%22sslocal%3a%2f%2fprofile%3fcategory_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%5cu0026from_page%3dat_user_profile%5cu0026uid%3d105181786798%22%2c%22type%22%3a1%2c%22text%22%3a%22%22%2c%22id%22%3a105181786798%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a63%2c%22length%22%3a22%2c%22link%22%3a%22sslocal%3a%2f%2fwebview%3fcategory_name%3dprofile_all%5cu0026disable_hash%3d1%5cu0026disable_tt_referer%3d1%5cu0026disable_tt_ua%3d1%5cu0026enter_from%3dclick_profile_all%5cu0026url%3dhttp%253A%252F%252Fwap.cac.gov.cn%252F%22%2c%22type%22%3a3%2c%22text%22%3a%22%e7%bd%91%e9%a1%b5%e9%93%be%e6%8e%a5%22%2c%22id%22%3a0%2c%22id_type%22%3a0%7d%2c%7b%22start%22%3a85%2c%22length%22%3a4%2c%22link%22%3a%22sslocal%3a%2f%2fmicroapp%3fapp_id%3dtt7f6e09d3e044c6ae%5cu0026meta%3d%257B%2522icon%2522%253A%2522https%253A%255C%252F%255C%252Fsf3-ttcdn-tos.pstatp.com%255C%252Fimg%255C%252Fdeveloper%255C%252Fapp%255C%252Ftt7f6e09d3e044c6ae%255C%252Ficonb7eae%7e144x144.jpeg%2522%252C%2522name%2522%253A%2522%25E8%25B1%2586%25E6%259E%259C%25E7%25BE%258E%25E9%25A3%259F%2522%252C%2522orientation%2522%253A0%257D%5cu0026launch_from%3dpublish_weitoutiao%5cu0026start_page%3dpages%252Fhome%252Fhome%5cu0026category_name%3dprofile_all%5cu0026enter_from%3dclick_profile_all%22%2c%22type%22%3a6%2c%22text%22%3a%22%e8%b1%86%e6%9e%9c%e7%be%8e%e9%a3%9f%22%2c%22id%22%3a0%2c%22id_type%22%3a0%7d%5d%7d&amp;post_images=%5b%5d">post_image 空</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Retro Meeting -> 团队的自我疗伤]]></title>
    <link href="http://www.chaisong.xyz/15407404509104.html"/>
    <updated>2018-10-28T23:27:30+08:00</updated>
    <id>http://www.chaisong.xyz/15407404509104.html</id>
    <content type="html"><![CDATA[
<p>有感。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【从历年weak看iOS面试】]]></title>
    <link href="http://www.chaisong.xyz/15379393489219.html"/>
    <updated>2018-09-26T13:22:28+08:00</updated>
    <id>http://www.chaisong.xyz/15379393489219.html</id>
    <content type="html"><![CDATA[
<ul>
<li><p>2013年<br/>
面试官：代理用weak还是strong?<br/>
我 ：weak 。<br/>
面试官：明天来上班吧</p></li>
<li><p>2014年<br/>
面试官：代理为什么用weak不用strong?<br/>
我 ： 用strong会造成循环引用。<br/>
面试官：明天来上班吧</p></li>
<li><p>2015年<br/>
面试官：weak是怎么实现的？<br/>
我 ：weak其实是 系统通过一个hash表来实现对象的弱引用<br/>
面试官：明天来上班吧</p></li>
<li><p>2016年<br/>
面试官：weak是怎么实现的？<br/>
我 ：runtime维护了一个weak表，用于存储指向某个对象的所有weak指针。weak表其实是一个hash（哈希）表，key是所指对象的地址，Value是weak指针的地址（这个地址的值是所指对象指针的地址）数组。<br/>
面试官：明天来上班吧</p></li>
<li><p>2017年<br/>
面试官：weak是怎么实现的？<br/>
我 ： 1 初始化时：runtime会调用objc_initWeak函数，初始化一个新的weak指针指向对象的地址。<br/>
2    添加引用时：objc_initWeak函数会调用 storeWeak() 函数， storeWeak() 的作用是更新指针指向，创建对应的弱引用表。<br/>
3    释放时,调用clearDeallocating函数。clearDeallocating函数首先根据对象地址获取所有weak指针地址的数组，然后遍历这个数组把其中的数据设为nil，最后把这个entry从weak表中删除，最后清理对象的记录。<br/>
面试官：明天来上班吧</p></li>
<li><p>2018年<br/>
面试官：weak是怎么实现的？<br/>
我 ：跟2017年说的一样，还详细补充了objc_initWeak, storeWeak, clearDeallocating的实现细节。<br/>
面试官：小伙子基础不错。13k ,996干不干？干就明天来上班。。   下一个</p></li>
<li><p>2019年<br/>
面试官：weak是怎么实现的？<br/>
我 ：     别说了，拿纸来，我动手实现一个。<br/>
面试官：等写完后，面试官慢悠悠的说，小伙子不错，我考虑考虑，你先回去吧</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面试常见：iOS Category]]></title>
    <link href="http://www.chaisong.xyz/15378876730248.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876730248.html</id>
    <content type="html"><![CDATA[
<hr/>

<blockquote>
<p>面试非常多候选人，涉及到runtime相关知识Category是一个常见考察点，毕竟这是应用最多的runtime场景。<br/>
本文会针对这部分知识问题做一下分解。</p>
</blockquote>

<span id="more"></span><!-- more -->

<p>1、为什么OC可以用Category给系统类加方法？</p>

<p>2、能不能给系统类加实例？</p>

<p>3、通过objc_setAssociatedObject添加的变量和正常命名的有什么区别？</p>

<p>4、和系统方法同名会怎么发生什么？</p>

<p>5、两个Category同名会怎么样？</p>

<p>6、我一定要调用其中一个被覆盖的Category方法怎么做？</p>

<p>7、+load是怎么做到所有的category的+load都调用的？</p>

<p>8、针对Category同名问题怎么解决？</p>

<p>参考</p>

<p><a href="https://developer.apple.com/library/ios/qa/qa1908/_index.html#//apple_ref/doc/uid/DTS40016829">https://developer.apple.com/library/ios/qa/qa1908/_index.html#//apple_ref/doc/uid/DTS40016829</a></p>

<p>You can use the OBJC_PRINT_REPLACED_METHODS environment variable to enable extra debug logging that prints a message when methods are replaced by category implementations. When a category is loaded, a message similar to Listing 2 is printed for each method in the category that clashes with an existing method in the original class.</p>

<p>可以设置OBJC_PRINT_REPLACED_METHODS 环境变量来开启debug日志，开启后将会打印出某一方法何时被category实现方法替代了。当category被加载完成后，一条类似清单2展示的消息会被打印出来，这条消息表明了category中的哪一个方法与原始类中的方法名产生了冲突。</p>

<p>Listing 2  Log output when a method is replaced by a category implementation</p>

<p>objc[21184]: REPLACED: -[UIView isOccludedByView:] by category MyCategory (IMP was 0x1873728a0 (/System/Library/Frameworks<br/>
/UIKit.framework/UIKit), now 0x10002e700 (/var/mobile/Containers/Bundle/Application/14AFE8C4-EA96-4A51-8D40-F1DAD35CC3D8/<YourApplicationName>.app/<YourApplicationName>)</p>

<p>Important: You should ignore log messages that do not explicitly name your application or a custom framework it links against. Some system frameworks use categories to provide implementations of methods that are defined as stubs in the original class. This causes extra log messages to be emitted when running with the OBJC_PRINT_REPLACED_METHODS environment variable enabled and is expected behavior.<br/>
重要提示：你应该忽略那些和你的程序、自定义框架无关的消息。一些系统库使用category来实现原始类中定义的某些方法。当设置OBJC_PRINT_REPLACED_METHODS环境变量为真得时候，请忽略因为上述原因产生的多余日志，因为这是正常行为</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[-[UIImage imageNamed:]方法导致的卡顿优化]]></title>
    <link href="http://www.chaisong.xyz/15378876732043.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732043.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">引子</h3>

<p>这两天追查app卡顿问题，打开time profiler查看方法耗时，惊奇发现<code>-[UIImage imageNamed:]</code>占用CPU时间很长：</p>

<p>下图是重复打开一个feed页面的CPU占用，发现20%的CPU时间在<code>-[UIImage imageNamed:]</code>中，显然不合理，因为我们知道<code>-[UIImage imageNamed:]</code>相对于<code>-[UIImage imageWithContentsOfFile:]</code>存在图片缓存，重复打开本地图片应该性能影响非常小。</p>

<p><img src="https://lh3.googleusercontent.com/-oDATs6Fc0-k/Wuv5XJRmS9I/AAAAAAAAHQE/vqE-ztABSbs1dbBO53gmD2deAFMqK_aeQCHMYCw/I/15254142315308.jpg" alt=""/></p>

<p>关掉time profiler的Hide System Libraries勾选项，查看系统方法堆栈和对应的耗时：</p>

<p><img src="https://lh3.googleusercontent.com/-jmeXkroBTu0/Wuv5Z1a_vLI/AAAAAAAAHQI/RU1qDJGe0e8sNexcSTpcMhnF7hUg7_XPQCHMYCw/I/15254142400149.jpg" alt=""/></p>

<p>发现<code>-[NSFileManager fileExistsAtPath:]</code>为主要耗时方法，该方法没有本地数据读取，只是判断是否存在，感觉一脸懵逼？难道内存缓存了还会每次线判一次本地存在？苹果的实现不会这么蠢吧？..</p>

<h3 id="toc_1">-[UIImage imageNamed:] 的实现原理</h3>

<p>imageNamed:实际上调用的是一个叫做UIAssetManager的类，每个Bundle有一个UIAssetManager。它有一个strong-strong的NSMapTable<NSString, UIImageAsset>的属性，用来做缓存。。。</p>

<p>如果查询不到缓存，首先命中的是Assets.car，这个是CoreUIFrramework处理的（私有framework），会解压（有缓存）那个Assets.car然后解码取回图。</p>

<p>如果还找不到，会通过Bundle的path按照那个文档描述的，搜索@3x @2x @1x .png忽略等规则，直到找到一个那种非Assets.car的bundle图，然后加载。</p>

<p>如果你的图片不在Assets.car里面，会直接触发到最远的第三部，可能遍历搜索fileExist比较耗时吧</p>

<h3 id="toc_2">最终卡顿原因</h3>

<p>原因找到了：<br/>
themedImageNamed: 方法会每次都给 imageName 加上后缀先去取图，这个应该是iOS7之前没有Images Assets之前的适配逻辑。现在其实包里面没有-667h、-736h这样的图了，会导致所有图片第一次都取不到。就会发现频繁调用fileExistsAtPath:，而没调取图逻辑。<br/>
系统缓存了所有找到图片的UIImage，没缓存找不到的黑名单。</p>

<h3 id="toc_3">一些结论和启示</h3>

<p>-[UIImage imageNamed:] 需要hook加保护<br/>
FPS优化一定要找到瓶颈，别贸然优化 --&gt; 合理使用工具<br/>
IO操作很恐怖，哪怕只是很轻量级的处理<br/>
有必要监控一下NSFileManager的IO操作情况</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[复杂多人项目Owner思考]]></title>
    <link href="http://www.chaisong.xyz/15378876732077.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732077.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">1、背景</h2>

<p>UGC方向业务场景比较复杂，易同时出现多职能线和多业务线的大需求，而PM经常要求赶在某个版本前上线，使得频繁出现<strong>“时间倒排”</strong>。<br/>
当业务复杂遇上需求较大，那么每个业务方人员平均参与人数将大于1人，项目复杂度也会成倍提升。<br/>
需求完成情况最终体现在“代码合入”时间节点上，分解开来，便是<strong>提测时间点</strong>和<strong>代码质量</strong>。如果开发团队没有应对复杂业务逻辑、多业务线、多人项目工程化能力，最终导致项目delay或者采用加班方式解决问题，会遭各方吐槽，长此以往，则失去信任力。 </p>

<h2 id="toc_1">2、Delay一般原因分析</h2>

<blockquote>
<p>一般出现这类原因有两点：开发者时间评估不准确；缺乏纠偏。 </p>
</blockquote>

<h3 id="toc_2">2.1 时间评估问题</h3>

<ul>
<li>需求点把握不足：没能准确的将需求各个模块分解和细化。</li>
<li>核心流程图缺失、整体架构设计缺失：整体认知不足，不能高屋建瓴。 </li>
<li>过UI/UE时间评估不足，联调时间评估不足。 </li>
</ul>

<h3 id="toc_3">2.2 Owner在项目运行中缺少纠偏</h3>

<ul>
<li>没有里程碑或者里程碑过于简略 。</li>
<li>里程碑进展出现问题，不能尽快完成纠偏，导致问题持续、放大，最终导致delay。</li>
</ul>

<h2 id="toc_4">3、规避问题方式</h2>

<h3 id="toc_5">3.1 重视技术方案设计</h3>

<ul>
<li>RD在提供排期时，需同时提供详细的分解工期，否则该排期不应予以接受。</li>
<li>Owner应review各RD的需求分解的合理性。</li>
<li>RD内部需要做技术方案，并内部进行技术方案review，技术方案需要包含核心业务流程图（后端API调用流程、主干UI交互流程）。</li>
</ul>

<h3 id="toc_6">3.2 重视站会和里程碑</h3>

<ul>
<li><strong>过UI/UE时间点</strong>和<strong>联调时间点</strong>是项目进度管理中的重要里程碑。</li>
<li>表格、看板、甘特图都是可选的项目管理工具，复杂项目运行过程中至少使用一种。</li>
<li>要有规律的站会，站会重点review进展和里程碑完成情况。</li>
<li>每次站会需根据实际情况调整<strong>分解排期</strong>和<strong>里程碑</strong>，出现delay风险需提前周知项目利益方。</li>
</ul>

<h3 id="toc_7">3.3 大需求的分解code review</h3>

<p>项目内部需有code review里程碑，根据里程碑分解code review。<br/>
--- 分阶段code review思考待续 ---</p>

<h2 id="toc_8">4、总结</h2>

<ul>
<li>RD职责：做项目拆解及各分解时间安排，做技术方案。</li>
<li>Owner职责：根据各方拆解建立排期和里程碑，并组织站会，站会中回归项目风险点。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【IGListKit】学习与分析2]]></title>
    <link href="http://www.chaisong.xyz/15378876732116.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732116.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>源于4月16日在小组内的分享<br/>
图床为Google相册，看不了自己准备梯子。</p>
</blockquote>

<p><img src="https://lh3.googleusercontent.com/-FqbGRx5uisM/WtrleujON-I/AAAAAAAAHH4/ZGtWfjnP6D08bAYez34nKgjvThEbB_jZQCHMYCw/I/IGList" alt="IGList学习2.001"/></p>

<p><img src="https://lh3.googleusercontent.com/-gZm3qfRkmlk/WtrkF9Zvm7I/AAAAAAAAHFc/70Ncz1Z5QwUSfJP01lW2RQ3OFSRazLUwgCHMYCw/I/IGList" alt="IGList学习2.002"/></p>

<span id="more"></span><!-- more -->

<p><img src="https://lh3.googleusercontent.com/-0pNRRLD94jg/WtrkF0NVh6I/AAAAAAAAHFk/kdL8gQco_xYgqAUdDabKvmoeQTGlBo4FgCHMYCw/I/IGList" alt="IGList学习2.003"/></p>

<p><img src="https://lh3.googleusercontent.com/-MbzRduc6H9E/WtrkF5MuexI/AAAAAAAAHFg/bv2zpQ2ocLgsVotnO59yA8WY45FSwLdMwCHMYCw/I/IGList" alt="IGList学习2.004"/></p>

<p><img src="https://lh3.googleusercontent.com/-8DxkfkXiFfU/WtrkGI1vquI/AAAAAAAAHFs/CMIbvGtYShYgfWfgjqqiWYKL9fisp5XTwCHMYCw/I/IGList" alt="IGList学习2.005"/></p>

<p><img src="https://lh3.googleusercontent.com/-YMssUFgdOTo/WtrkFwvLfdI/AAAAAAAAHFY/FvubT71TpqMi5frVQUXE-OgyCjI8G2inQCHMYCw/I/IGList" alt="IGList学习2.006"/></p>

<p><img src="https://lh3.googleusercontent.com/-ljwnSVXp7Bg/WtrlbLjmx-I/AAAAAAAAHHw/gHkL-SVc-CImh7qlBi1bjHJWeYrSz2huwCHMYCw/I/IGList" alt="IGList学习2.007"/></p>

<p><img src="https://lh3.googleusercontent.com/-3SGvodKIkfA/WtrkGIecntI/AAAAAAAAHF4/L6-ZyZ1JrM07F3AZ-dnkKnodLwpRdpdoACHMYCw/I/IGList" alt="IGList学习2.008"/></p>

<p><img src="https://lh3.googleusercontent.com/-emdHINA0rEY/WtrkGNoFWAI/AAAAAAAAHFw/JWaovg06ipk-93Z-tIUw8PavZXyVuD-PACHMYCw/I/IGList" alt="IGList学习2.009"/></p>

<p><img src="https://lh3.googleusercontent.com/-Bo3b_eh2Bls/WtrkGA1wvLI/AAAAAAAAHF0/9UQwsHt2kfUsVyfG4LXJa7h_EgLcd33PwCHMYCw/I/IGList" alt="IGList学习2.010"/></p>

<p><img src="https://lh3.googleusercontent.com/-LtkPLL-45Vs/WtrkF91FyDI/AAAAAAAAHFQ/3fU0UqYvl90JKlnOo4-r-sbLWdWjkn_LgCHMYCw/I/IGList" alt="IGList学习2.011"/></p>

<p><img src="https://lh3.googleusercontent.com/-xo9LatqnbHQ/Wtrk015UIjI/AAAAAAAAHGw/2mbSqOPTfTgaDrrd-jMKD6GroZjoZUFxgCHMYCw/I/IGList" alt="IGList学习2.012"/></p>

<p><img src="https://lh3.googleusercontent.com/-VjrOxPaermo/Wtrk05mfWZI/AAAAAAAAHG8/4sJElXUEDFwa3NevSdiuSj-ZjMQoJiGbwCHMYCw/I/IGList" alt="IGList学习2.013"/></p>

<p><img src="https://lh3.googleusercontent.com/-ShSGV8c0Lx0/Wtrk0wXv7MI/AAAAAAAAHGs/hQRPI8ySzLQdT5jJRvK1T6oSbQQEFV5JgCHMYCw/I/IGList" alt="IGList学习2.014"/></p>

<p><img src="https://lh3.googleusercontent.com/-ZWHeR9DTYGU/WtrlEWXBS1I/AAAAAAAAHHQ/qJAPrG-w4GQnwDVMCqOGS7WxZcs0yvVqQCHMYCw/I/IGList" alt="IGList学习2.015"/></p>

<p><img src="https://lh3.googleusercontent.com/-xVfRhZhIqW4/Wtrk0wQHw8I/AAAAAAAAHG4/zDN8RbMXFVQ7k7XGkh8Om2rxpwuqG7mfgCHMYCw/I/IGList" alt="IGList学习2.016"/></p>

<p><img src="https://lh3.googleusercontent.com/-au7HKcLFQ10/Wtrk00SFFZI/AAAAAAAAHGo/-vm-U10Uns82mP_rMaTJOBcgS8uObSevwCHMYCw/I/IGList" alt="IGList学习2.017"/></p>

<p><img src="https://lh3.googleusercontent.com/-gR-5TpG-AU0/Wtrk00YWqYI/AAAAAAAAHHE/fMxmOoGcAuQbA6lmshvaxIKotGyLQiV5QCHMYCw/I/IGList" alt="IGList学习2.018"/></p>

<p><img src="https://lh3.googleusercontent.com/-QLOsvoK3jeg/WtrlUU4hWlI/AAAAAAAAHHs/tpYFlDHN1I4JQCf9OYjexvbD_1LPynGWwCHMYCw/I/IGList" alt="IGList学习2.019"/></p>

<p><img src="https://lh3.googleusercontent.com/-917NY1ms0GA/Wtrk0wbzGrI/AAAAAAAAHHM/qGNzIBufKhUxx1MyktuCcOnvg5XJL-aKwCHMYCw/I/IGList" alt="IGList学习2.020"/></p>

<p><img src="https://lh3.googleusercontent.com/-9yccgBnoDjA/Wtrk0yz_5CI/AAAAAAAAHG0/bpQPDqHzGFsEq31WsEscWEuMLeVWYhbvACHMYCw/I/IGList" alt="IGList学习2.021"/></p>

<p><img src="https://lh3.googleusercontent.com/-98xFYuPBaUY/WtrlQhk-gpI/AAAAAAAAHHo/IkR7sJR_wPMfnWBm5invS_1pmZnGS03CACHMYCw/I/IGList" alt="IGList学习2.022"/></p>

<p><img src="https://lh3.googleusercontent.com/-aN1y0Bkj8dw/Wtrk2aXB7GI/AAAAAAAAHHA/9CL-kzrh91gdeGw31EPs114yWE_2zvQWACHMYCw/I/IGList" alt="IGList学习2.023"/></p>

<p><img src="https://lh3.googleusercontent.com/-oFyJ7-qenRc/WtrlOO4vhXI/AAAAAAAAHHk/QEIE11578DQiKq3k9PN-SldTvkNJvIvKwCHMYCw/I/IGList" alt="IGList学习2.024"/></p>

<p><img src="https://lh3.googleusercontent.com/-uqjxf9X08JU/WtrkGThqRwI/AAAAAAAAHF8/oxqZL78qvkQ-fGEJU1FFwRwZZN-Q68MBwCHMYCw/I/IGList" alt="IGList学习2.025"/></p>

<p><img src="https://lh3.googleusercontent.com/-yt48QkNQIkI/WtrkGdE1WcI/AAAAAAAAHFo/Kkw45BAWWdg8VAJAWOCs61rF4Jx_Sg01wCHMYCw/I/IGList" alt="IGList学习2.026"/></p>

<p><img src="https://lh3.googleusercontent.com/-9wqFeoP3HaU/WtrkpTOzMLI/AAAAAAAAHGg/VhFkvGAkqugvR4gpeZpgYr5R4_1Ovkn9wCHMYCw/I/IGList" alt="IGList学习2.027"/></p>

<p><img src="https://lh3.googleusercontent.com/-uxX91xjK2ms/Wtrkpe7IylI/AAAAAAAAHGc/5XoRUqFEFUYzWA08FVuKM4p0L6jqbuavACHMYCw/I/IGList" alt="IGList学习2.028"/></p>

<p><img src="https://lh3.googleusercontent.com/-4k-M1HZiR6k/WtrkpVL1CWI/AAAAAAAAHGY/a8SWRYV0M3ERhVmOyZxfNqkLCOeUuDVywCHMYCw/I/IGList" alt="IGList学习2.029"/></p>

<p><img src="https://lh3.googleusercontent.com/-N0gAtHcSFRg/WtrkpbnvZpI/AAAAAAAAHGk/9QMcmER3R4A93LNGXjVpGqDowOegzaArQCHMYCw/I/IGList" alt="IGList学习2.030"/></p>

<p><img src="https://lh3.googleusercontent.com/-n3dftairryw/WtrkF3i0XfI/AAAAAAAAHFU/H28ZO5XOX-AArZuJsSUgIdGuGAO15vSWQCHMYCw/I/IGList" alt="IGList学习2.031"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【IGListKit】ListDiff 学习与分析1]]></title>
    <link href="http://www.chaisong.xyz/15378876732151.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732151.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>源于4月2日在小组内的分享。<br/>
图床为Google相册，看不了自己准备梯子。</p>
</blockquote>

<p><img src="https://lh3.googleusercontent.com/-3jEV3avy7vY/WtriDp896UI/AAAAAAAAHDc/lCPKHvEM0CY7Gq1BugbSTZFkf60iD_SbQCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.001"/></p>

<p><img src="https://lh3.googleusercontent.com/-KfR_MU43kyc/WtrjMBGv0XI/AAAAAAAAHE0/aGRivjQBYMgz9LFzDQtIDz4o9QKDwfbSQCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.002"/></p>

<span id="more"></span><!-- more -->

<p><img src="https://lh3.googleusercontent.com/-KEsabtzFdk8/WtriDgDQ6XI/AAAAAAAAHDE/n0napZap9eUgjhkiMaRF3JMwgWsQO7wigCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.003"/></p>

<p><img src="https://lh3.googleusercontent.com/-QtPMmJFmsdQ/WtriDi7RGzI/AAAAAAAAHDI/BpvhNm8swTkGWM7CP46erar-SD--ojL-QCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.004"/></p>

<p><img src="https://lh3.googleusercontent.com/-pwrJkAPldWA/WtrjOxtQsLI/AAAAAAAAHE4/dexTWqWLn8AYaOfwBV-k9mgqlSVv6j-5QCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.005"/></p>

<p><img src="https://lh3.googleusercontent.com/-cZdtwRA6oM8/WtrjO4YNBAI/AAAAAAAAHE8/6p96Ts4kQCQWiTlnbvvi69lI9HUaQn0xwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.006"/></p>

<p><img src="https://lh3.googleusercontent.com/-Gmda5Q6lofM/WtriDgRnzOI/AAAAAAAAHDQ/6e4VLqpSw1c_zSNNKSjvoyHB25IcsKuPgCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.007"/></p>

<p><img src="https://lh3.googleusercontent.com/-EPU_D5Gc4S4/WtrjSo1Ie0I/AAAAAAAAHFA/E5LKBYrksN8OvJqifYbLRWSTDVwsISSuwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.008"/></p>

<p><img src="https://lh3.googleusercontent.com/-MqYic4U-Wvw/WtriDgDx8iI/AAAAAAAAHDY/6QbapA9_k3ESRlyTNK4MeRs3vhuUnC0_wCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.009"/></p>

<p><img src="https://lh3.googleusercontent.com/-3eojsu6usJA/Wtri8C4mhyI/AAAAAAAAHEg/rM4brr7eOX4ffaVNUMCBztaIX6rqwqqTQCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.010"/></p>

<p><img src="https://lh3.googleusercontent.com/-CRFLI035J_E/WtriDu9lu6I/AAAAAAAAHDU/Zayl7p_R_oE5XEkJtwBoABL9s64MLJKaACHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.011"/></p>

<p><img src="https://lh3.googleusercontent.com/-M_fIlB0FudI/Wtri5lc_-0I/AAAAAAAAHEc/sD3aT4GPti0Mh2GvqP7taGyOInxwQatNwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.012"/></p>

<p><img src="https://lh3.googleusercontent.com/-nFERUlMFYdk/WtriDl2L8II/AAAAAAAAHDM/q3P2y0ybqqsmLNJX5r00W89d0_SFgHPDwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.013"/></p>

<p><img src="https://lh3.googleusercontent.com/-zxLw73SigmA/WtriDhQxWoI/AAAAAAAAHC8/KNhwkYMmavQTnueGty54lPz3-PMo7yt7gCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.014"/></p>

<p><img src="https://lh3.googleusercontent.com/-82bFCGc3G4Y/Wtriyfw7_PI/AAAAAAAAHEQ/8RrK1pilyyIPPjmF5d9Q-F7ni4UARijNwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.015"/></p>

<p><img src="https://lh3.googleusercontent.com/-M7pYTQnCZqg/WtriyYDq8wI/AAAAAAAAHEU/DcugGQbWNK4534P45L3r7dLYEB8Gjx-_wCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.016"/></p>

<p><img src="https://lh3.googleusercontent.com/-7Mti9wMgdzU/WtriyWEgjdI/AAAAAAAAHEM/qkAZFyT6xTMEuXPOYnckabQ6c50UACFEgCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.017"/></p>

<p><img src="https://lh3.googleusercontent.com/-4yBs3SmLsBk/WtriDhv30FI/AAAAAAAAHC4/7sPLN1M4ayY9qsHnYake-bi0EeIUO5cNQCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.018"/></p>

<p><img src="https://lh3.googleusercontent.com/-Ezne7uiJQeA/WtriDkp7JHI/AAAAAAAAHDA/fDQLbOy5f4kDI__Sg4R_ZdOIX1I1N_7LwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.019"/></p>

<p><img src="https://lh3.googleusercontent.com/-en735u-REJk/Wtrimd9UKQI/AAAAAAAAHEA/-tDwb5VF7MQbz6F6Cn4XFwQZyfx0W2SnQCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.020"/></p>

<p><img src="https://lh3.googleusercontent.com/-D1hsMxhquaM/WtrimQDbpyI/AAAAAAAAHD8/lDZQFklWNOgS9QS7qgPYSHEFJvKvWBQ_gCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.021"/></p>

<p><img src="https://lh3.googleusercontent.com/-l498mWLndBc/WtrimVBN90I/AAAAAAAAHEE/1ZpdsGb21csQfdzgLpVlenOgVLss7-NQwCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.022"/></p>

<p><img src="https://lh3.googleusercontent.com/-5LSSEOOU9ds/WtrimSI8nuI/AAAAAAAAHD4/-MCzJkU0MXAAtMlL44igIQj8LwaYsmQ-QCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.023"/></p>

<p><img src="https://lh3.googleusercontent.com/-4maoLl7X6KY/Wtrimzxm9XI/AAAAAAAAHEI/pMLQnpfjC-otVokJyDWFoZCmL077-FLqgCHMYCw/I/ListDiff%2B" alt="ListDiff 学习与分析.024"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[更新一下今年的学习计划]]></title>
    <link href="http://www.chaisong.xyz/15378876732185.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732185.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">1、工作上</h2>

<p>找到新的突破</p>

<h2 id="toc_1">2、学习</h2>

<p>一本英文书<br/>
Introduction to Computation and Programming Using Python(2nd)</p>

<h2 id="toc_2">3、身体</h2>

<p>一三五去健身，平均每周2小时健身房运动。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello 2018]]></title>
    <link href="http://www.chaisong.xyz/15378876732218.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732218.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>写了两篇17年的感悟，这一篇写一下对18年的一些期望。</p>
</blockquote>

<h3 id="toc_0">新年寄语</h3>

<blockquote>
<p><strong>突破、胸怀、守时</strong><br/>
我希望，这三个寄语，能贯穿一年的主线，引领我一年的成长。</p>
</blockquote>

<p><strong>突破是我对一年最大的期望了。</strong><br/>
18年3月27日，是我头条入职1周年，也是我毕业参加工作4整年的日子。毕业后先去了微信，然后是好奇心日报，再到头条，作为一个iOS开发，已经4个年头，虽然成为了一个最基层的技术领导者，但瓶颈也随之出现。<br/>
今年，努力寻找在工作上肩负起更大的责任，或者在技术方向上寻找一个全新的领域。</p>

<p><strong>胸怀一个男人应有的素质</strong><br/>
18年，我即将会组建家庭，标志的成为一个完整的自然人，有道是成家立业。<br/>
随之而来的，是家庭生活，双方长辈的关系，琐事和纠纷也许也会不期而至。<br/>
有事做得好，有时做的差，其实都是家人，影响本身不大，重要的更多是态度。作为一个男人，在家庭中，尤其要有包容的胸怀，有心胸，能包容女人的脾气，能在婆媳中增加缓冲，永远起到积极的作用。<br/>
嗯，28年来，心胸这个词第一次进入了我的个人要求中，提到这个词，能感觉到自己的成长。</p>

<p><strong>守时是品德，想表达的更多是一些传统素质</strong><br/>
守信，应该是立于世界的基本品质，自认为一直坚持的不错，或者并不需要坚持，只需要不被错误引导即可。<br/>
但守时，毕业后渐渐堕落，和大家同流。虽有太多理由可以原谅自己。但我依旧相信，生活中有些东西，值得一直坚持，18年，言而有信从守时开始做起。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2017年的几点感悟]]></title>
    <link href="http://www.chaisong.xyz/15378876732252.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732252.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>一年又在没有一丝丝防备中到来而消去，回首一年，感受平静河流下面蕴含的一些汹涌，每天不知所踪的忙碌。<br/>
随波逐流，又想特立独行；有时怀疑自己，有时信心膨胀；会因别人转瞬的表情而患得患失。索性，那份全力以赴的热情，还未流失。</p>

<p>写这篇文章，主要描述一种感觉，沉淀一下2017年给自己带来的几点感悟，也希望指引一下有些迷茫的自己，寻找下一个突破</p>
</blockquote>

<h3 id="toc_0">一、初窥堂奥——一个技术领导者的起步</h3>

<p>跳槽还是不期而至，在好奇心日报没能坚持到第三年，之前写过一篇<a href="/2017/03/24/2017-03-24/">总结</a>，回顾了跳槽的心路历程。<br/>
头条是一家不错的公司，起码福利和待遇还是不错的。选择来头条，是因为相信这是一家一定会成功的公司，而自己，在这里有一个在个人职业阅历下，能拥有的还不错的坑。</p>

<span id="more"></span><!-- more -->

<h3 id="toc_1">二、管中窥豹——头条的内在逻辑</h3>

<blockquote>
<p>将来如果回忆起2017年，那跳槽来到头条一定是当年非常重要的关键词。<br/>
来到头条，管中窥豹，学习了一种生存逻辑，很神奇，也很颠覆。</p>
</blockquote>

<p>产品的能力应该体现在能把复杂的逻辑给用户看起来简单化；而不是为了实现方便只去做简单的处理，然后粗暴的通过AB测试后用数据来选择，嘴上说通过数据导向，其实是对复杂情况驾驭能力不够的体现。<br/>
微信的产品经理很多时间都是在思考，想产品逻辑，他们会把很多因果关系弄的很清楚，他们的观点很能说服人。就我个人在微信的工作经历，遇到的PM在给我设定需求的时候，都能让我心悦诚服的多写很多开发看起来恶心的代码；但在头条却很多情况都不会。<br/>
在头条，很多时候和PM争论逻辑（可能不仅PM），最终的杀手锏都是“这样弄数据好”，那些简单粗暴的数字经常噎的人哑口无言，因为这一刻，会给你感觉，你对面的不是一个人，是千千万万的用户，是整个头条的发展...<br/>
我一直认为，真正的产品经理一定能解释通自己的产品逻辑，这些逻辑来源于他个人的天赋、对产品的深刻理解、对用户行为的内在逻辑分析，他的逻辑能预测最终产品上线后的效果，也能解释通产品后的数据情况。当然，这只是“我以为”，这理想主义似得产品认知，完全来自于微信，来源于职业生涯的起点。</p>

<p>但反过来讲，用数据说话，理不清其内在的逻辑，使得头条对它的竞争对手带来的，恰似一种降维打击。面对头条杀入越来越多的领域，很多公司往往不会很恐惧，因为典型的思考模式是：“用头条的人，其实和我们的用户群重叠并不大”。头条的PM自己都离不清自己逻辑，别人又怎么能看得清呢？恰似独孤九剑吧，无招胜有招，任你千遍万化，我自AB测试。</p>

<h3 id="toc_2">三、包容——走向而立的男人</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[17年的总结]]></title>
    <link href="http://www.chaisong.xyz/15378876732285.html"/>
    <updated>2018-09-25T23:01:13+08:00</updated>
    <id>http://www.chaisong.xyz/15378876732285.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>对我个人来讲，17年有两大收获，一是跳槽来了头条，二是找到了人生的另一半。<br/>
本该是事业有进步，爱情有收获，但发生了好多别的事情，使得这一年其实有些痛苦和无奈。</p>
</blockquote>

<h2 id="toc_0">衰老</h2>

<p>妈妈去年底的体检查出了宫颈癌病毒，我刚看到体检报告的时候一下子就懵了，后来发现其实没那么严重，上半年做了个锥切手术，但未能完全痊愈，需要持续观察才行，每念此处，都心绞一阵。<br/>
妈妈前几年血糖比较高，导致眼底出血，虽然做了激光手术，但也留下了永久的后遗症，前几天回家，发现妈妈视力越发的不好了，心疼。<br/>
由于我父亲，今年下半年父母发生了非常大的争吵，其中细节无心评述。心里对父亲充满怨念，包括上面说的妈妈两个病因，父亲都有直接或间接原因，也许我永远都不会原谅他了，看着他，心里总带着烦躁和鄙视。</p>

<h2 id="toc_1">投资</h2>

<p>妈妈去年年底像魔障了一样，手里稍微有点钱就想加大杠杆投资房产，在国家政策最为严厉的封口浪尖的4月份，依然坚持买了个门市楼，虽然后来她非常后悔，但木已成舟，悔之晚矣。<br/>
去年底今年初的慌乱房产投机，损失100多万，而且，彻底毁掉了一家三口人的现金流，同时背负了沉重的贷款债务，今年多次在睡前想起，然后辗转反侧难以入睡。<br/>
最终贷款压力主要在我身上，父母已老，不想太多说什么，只是这几年要对不住邹韵了。索性，妈妈陆续卖掉一些房产，略微缓解部分燃眉。</p>

<h2 id="toc_2">突破</h2>

<p>还算幸运，今年职场上再获一次突破，从好奇心日报的一个小技术团队的负责人，到了头条的一个小技术团队的技术leader，麻雀虽小，却收获颇多。<br/>
因为相信头条一定最后能成为一家了不起的公司，相信如果个人能随着公司的成长，会有更大的进步。<br/>
一年来，学会了一些流程、使用了一些工具、也了解了一些运转方式，有的东西很好玩，有的东西很无奈。<br/>
软实力提高很多，硬实力提高比较少，工作很忙，有时迷失了自己。<br/>
但尚好，没有盲目尊大，也没有妄自菲薄。<br/>
期望，能找到下一个突破。</p>

<h2 id="toc_3">爱情</h2>

<p>儿时好友的婚讯给了我不小的刺激，人有时就是不知道自己最终要的是什么，便如人生哲学有教育别人“今朝有酒今朝醉”，让人及时行乐；也有告诫人们“少壮不努力，老大徒伤悲”的励志警句。很多事情，回忆今天，难保会有遗憾和悔恨。<br/>
说遍了无病呻吟，今年的爱情其实是很顺利的，认识了邹韵，然后住在了一起，虽有时激情不高，但却和谐美好，邹韵是个可以白头的女孩，我很满意，也很开心。不管酸甜苦辣，愿能永远。</p>

<h2 id="toc_4">有点成绩？</h2>

<ul>
<li>因为换工作融入比较好，团队给力，所以有了一个还不错的绩效。但其实工作成果自己是不够满意的。</li>
<li>爱情基本稳定，即将走向婚姻</li>
<li>买了个还挺满意的房子，生活可以期待</li>
<li>开了大半年女朋友的车，生活体验高了不少</li>
</ul>

]]></content>
  </entry>
  
</feed>
